[gd_resource type="ShaderMaterial" load_steps=2 format=2]

[sub_resource type="Shader" id=1]

code = "shader_type canvas_item;

uniform float scatter_range = 0;
uniform float mult = 1.0;
uniform float trail = 0.9;
//uniform vec4 bg_color = 

float rand(inout float seed, vec2 uv){
	vec2 co = uv * seed;
    float num = fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);
	seed *= num;
	return num;
}

void fragment() {
	float seed = TIME;
	vec2 co = SCREEN_UV;
	vec2 pixel_size = 1.0 / vec2(textureSize(SCREEN_TEXTURE, 0));
    vec4 scr = textureLod(SCREEN_TEXTURE, SCREEN_UV, 0.0);
	vec4 last = texture(TEXTURE, UV);
	vec2 px_range = pixel_size;
	////scatter////
	px_range *= scatter_range;
	if (rand(seed, co) < 0.3) {
		vec2 offset = vec2(
			mix(-px_range.x, px_range.x, rand(seed, co)),
			mix(-px_range.y, px_range.y, rand(seed, co))
		);
    	vec4 offset_c = textureLod(SCREEN_TEXTURE, SCREEN_UV+offset, 0.0);

	    scr = offset_c;

    	COLOR = offset_c;
	} else {
		COLOR = scr * mult;
	}
	////trail///
	if (rand(seed, UV) < trail) {
		COLOR = last;
	}
}
"
_sections_unfolded = [ "Resource" ]

[resource]

render_priority = 0
shader = SubResource( 1 )
shader_param/scatter_range = null
shader_param/mult = null
shader_param/trail = null
_sections_unfolded = [ "shader_param" ]

