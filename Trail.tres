[gd_resource type="ShaderMaterial" load_steps=2 format=2]

[sub_resource type="Shader" id=1]

code = "shader_type canvas_item;

uniform float trail = 0.9;

float rand(inout float seed, vec2 uv){
	vec2 co = uv * seed;
    float num = fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);
	seed *= num;
	return num;
}

void fragment() {
	float seed = TIME;
	vec2 co = SCREEN_UV;
    vec4 scr = textureLod(SCREEN_TEXTURE, SCREEN_UV, 0.0);
	vec4 last = texture(TEXTURE, UV);
	if (rand(seed, UV) < trail) {
		COLOR = last;
	} else 
		COLOR = scr;
}
"
_sections_unfolded = [ "Resource" ]

[resource]

render_priority = 0
shader = SubResource( 1 )
shader_param/trail = null
_sections_unfolded = [ "shader_param" ]

